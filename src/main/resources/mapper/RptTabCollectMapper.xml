<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.snjtjj.mapper.RptTabCollectMapper">
    <resultMap id="BaseResultMap" type="com.snjtjj.entity.RptTabCollect">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="tabid" property="tabid" jdbcType="VARCHAR"/>
        <result column="hzcode" property="hzcode" jdbcType="VARCHAR"/>
        <result column="usercode" property="usercode" jdbcType="VARCHAR"/>
        <result column="num1" property="num1" jdbcType="INTEGER"/>
        <result column="num2" property="num2" jdbcType="INTEGER"/>
        <result column="num3" property="num3" jdbcType="INTEGER"/>
        <result column="num4" property="num4" jdbcType="INTEGER"/>
        <result column="num5" property="num5" jdbcType="INTEGER"/>
        <result column="num6" property="num6" jdbcType="INTEGER"/>
        <result column="num7" property="num7" jdbcType="INTEGER"/>
        <result column="num8" property="num8" jdbcType="INTEGER"/>
        <result column="num9" property="num9" jdbcType="INTEGER"/>
        <result column="num10" property="num10" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, tabid, hzcode, usercode, num1, num2, num3, num4, num5, num6, num7, num8, num9, 
    num10
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.snjtjj.entity.RptTabCollectExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from rpt_tab_collect
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByTableId" resultType="java.util.HashMap" parameterType="java.lang.String">
        select * from (select a.tabid,a.usercode,
        ${fieldSql}
        from rpt_tab_collect a LEFT JOIN rpt_task_object b on a.usercode=b.id
        where a.tabid = #{tabid,jdbcType=VARCHAR} AND b.report_state='qystg'
        GROUP BY tabid,usercode
        ) tb
        <if test="searchList != null">
             where 1=1 <![CDATA[ ${searchList} ]]>
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from rpt_tab_collect
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from rpt_tab_collect
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.snjtjj.entity.RptTabCollectExample">
        delete from rpt_tab_collect
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.snjtjj.entity.RptTabCollect">
    insert into rpt_tab_collect (id, tabid, hzcode, 
      usercode, num1, num2, 
      num3, num4, num5, num6, 
      num7, num8, num9, num10
      )
    values (#{id,jdbcType=VARCHAR}, #{tabid,jdbcType=VARCHAR}, #{hzcode,jdbcType=VARCHAR}, 
      #{usercode,jdbcType=VARCHAR}, #{num1,jdbcType=INTEGER}, #{num2,jdbcType=INTEGER}, 
      #{num3,jdbcType=INTEGER}, #{num4,jdbcType=INTEGER}, #{num5,jdbcType=INTEGER}, #{num6,jdbcType=INTEGER}, 
      #{num7,jdbcType=INTEGER}, #{num8,jdbcType=INTEGER}, #{num9,jdbcType=INTEGER}, #{num10,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.snjtjj.entity.RptTabCollect">
        insert into rpt_tab_collect
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="tabid != null">
                tabid,
            </if>
            <if test="hzcode != null">
                hzcode,
            </if>
            <if test="usercode != null">
                usercode,
            </if>
            <if test="num1 != null">
                num1,
            </if>
            <if test="num2 != null">
                num2,
            </if>
            <if test="num3 != null">
                num3,
            </if>
            <if test="num4 != null">
                num4,
            </if>
            <if test="num5 != null">
                num5,
            </if>
            <if test="num6 != null">
                num6,
            </if>
            <if test="num7 != null">
                num7,
            </if>
            <if test="num8 != null">
                num8,
            </if>
            <if test="num9 != null">
                num9,
            </if>
            <if test="num10 != null">
                num10,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="tabid != null">
                #{tabid,jdbcType=VARCHAR},
            </if>
            <if test="hzcode != null">
                #{hzcode,jdbcType=VARCHAR},
            </if>
            <if test="usercode != null">
                #{usercode,jdbcType=VARCHAR},
            </if>
            <if test="num1 != null">
                #{num1,jdbcType=INTEGER},
            </if>
            <if test="num2 != null">
                #{num2,jdbcType=INTEGER},
            </if>
            <if test="num3 != null">
                #{num3,jdbcType=INTEGER},
            </if>
            <if test="num4 != null">
                #{num4,jdbcType=INTEGER},
            </if>
            <if test="num5 != null">
                #{num5,jdbcType=INTEGER},
            </if>
            <if test="num6 != null">
                #{num6,jdbcType=INTEGER},
            </if>
            <if test="num7 != null">
                #{num7,jdbcType=INTEGER},
            </if>
            <if test="num8 != null">
                #{num8,jdbcType=INTEGER},
            </if>
            <if test="num9 != null">
                #{num9,jdbcType=INTEGER},
            </if>
            <if test="num10 != null">
                #{num10,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.snjtjj.entity.RptTabCollectExample" resultType="java.lang.Integer">
        select count(*) from rpt_tab_collect
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update rpt_tab_collect
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.tabid != null">
                tabid = #{record.tabid,jdbcType=VARCHAR},
            </if>
            <if test="record.hzcode != null">
                hzcode = #{record.hzcode,jdbcType=VARCHAR},
            </if>
            <if test="record.usercode != null">
                usercode = #{record.usercode,jdbcType=VARCHAR},
            </if>
            <if test="record.num1 != null">
                num1 = #{record.num1,jdbcType=INTEGER},
            </if>
            <if test="record.num2 != null">
                num2 = #{record.num2,jdbcType=INTEGER},
            </if>
            <if test="record.num3 != null">
                num3 = #{record.num3,jdbcType=INTEGER},
            </if>
            <if test="record.num4 != null">
                num4 = #{record.num4,jdbcType=INTEGER},
            </if>
            <if test="record.num5 != null">
                num5 = #{record.num5,jdbcType=INTEGER},
            </if>
            <if test="record.num6 != null">
                num6 = #{record.num6,jdbcType=INTEGER},
            </if>
            <if test="record.num7 != null">
                num7 = #{record.num7,jdbcType=INTEGER},
            </if>
            <if test="record.num8 != null">
                num8 = #{record.num8,jdbcType=INTEGER},
            </if>
            <if test="record.num9 != null">
                num9 = #{record.num9,jdbcType=INTEGER},
            </if>
            <if test="record.num10 != null">
                num10 = #{record.num10,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update rpt_tab_collect
        set id = #{record.id,jdbcType=VARCHAR},
        tabid = #{record.tabid,jdbcType=VARCHAR},
        hzcode = #{record.hzcode,jdbcType=VARCHAR},
        usercode = #{record.usercode,jdbcType=VARCHAR},
        num1 = #{record.num1,jdbcType=INTEGER},
        num2 = #{record.num2,jdbcType=INTEGER},
        num3 = #{record.num3,jdbcType=INTEGER},
        num4 = #{record.num4,jdbcType=INTEGER},
        num5 = #{record.num5,jdbcType=INTEGER},
        num6 = #{record.num6,jdbcType=INTEGER},
        num7 = #{record.num7,jdbcType=INTEGER},
        num8 = #{record.num8,jdbcType=INTEGER},
        num9 = #{record.num9,jdbcType=INTEGER},
        num10 = #{record.num10,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.snjtjj.entity.RptTabCollect">
        update rpt_tab_collect
        <set>
            <if test="tabid != null">
                tabid = #{tabid,jdbcType=VARCHAR},
            </if>
            <if test="hzcode != null">
                hzcode = #{hzcode,jdbcType=VARCHAR},
            </if>
            <if test="usercode != null">
                usercode = #{usercode,jdbcType=VARCHAR},
            </if>
            <if test="num1 != null">
                num1 = #{num1,jdbcType=INTEGER},
            </if>
            <if test="num2 != null">
                num2 = #{num2,jdbcType=INTEGER},
            </if>
            <if test="num3 != null">
                num3 = #{num3,jdbcType=INTEGER},
            </if>
            <if test="num4 != null">
                num4 = #{num4,jdbcType=INTEGER},
            </if>
            <if test="num5 != null">
                num5 = #{num5,jdbcType=INTEGER},
            </if>
            <if test="num6 != null">
                num6 = #{num6,jdbcType=INTEGER},
            </if>
            <if test="num7 != null">
                num7 = #{num7,jdbcType=INTEGER},
            </if>
            <if test="num8 != null">
                num8 = #{num8,jdbcType=INTEGER},
            </if>
            <if test="num9 != null">
                num9 = #{num9,jdbcType=INTEGER},
            </if>
            <if test="num10 != null">
                num10 = #{num10,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.snjtjj.entity.RptTabCollect">
    update rpt_tab_collect
    set tabid = #{tabid,jdbcType=VARCHAR},
      hzcode = #{hzcode,jdbcType=VARCHAR},
      usercode = #{usercode,jdbcType=VARCHAR},
      num1 = #{num1,jdbcType=INTEGER},
      num2 = #{num2,jdbcType=INTEGER},
      num3 = #{num3,jdbcType=INTEGER},
      num4 = #{num4,jdbcType=INTEGER},
      num5 = #{num5,jdbcType=INTEGER},
      num6 = #{num6,jdbcType=INTEGER},
      num7 = #{num7,jdbcType=INTEGER},
      num8 = #{num8,jdbcType=INTEGER},
      num9 = #{num9,jdbcType=INTEGER},
      num10 = #{num10,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
    <!-- 周方明添加的sql -->
    <select id="selectGroupByTab" resultMap="BaseResultMap" parameterType="String">
    select q.name as usercode,p.hzcode,p.num1,p.num2,p.num3,p.num4,p.num5,p.num6,p.num7,p.num8,p.num9,p.num10 from
    (select left(c.simple_code,9) as usercode,a.hzcode,sum(num1) as num1,sum(num2) as num2,sum(num3) as num3,
    sum(num4) as num4,sum(num5) as num5,
    sum(num6) as num6,sum(num7) as num7,
    sum(num8) as num8,sum(num9) as num9,sum(num10) as num10
    from rpt_tab_collect a left join rpt_task_object b on a.usercode=b.id left join area c on c.code = b.xzqh_id
    where a.tabid = #{tabid} and b.report_state='qystg'
    group by left(c.simple_code,9) ,a.hzcode) p left join area q on p.usercode = q.simple_code
  </select>
</mapper>